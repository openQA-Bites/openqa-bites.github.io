<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Src on openQA bites</title><link>https://openQA-Bites.github.io/categories/src/</link><description>Recent content in Src on openQA bites</description><generator>Hugo</generator><language>en-us</language><managingEditor>felix.niederwanger@suse.de (phoenix)</managingEditor><webMaster>felix.niederwanger@suse.de (phoenix)</webMaster><lastBuildDate>Fri, 13 Aug 2021 10:58:14 +0200</lastBuildDate><atom:link href="https://openQA-Bites.github.io/categories/src/index.xml" rel="self" type="application/rss+xml"/><item><title>Use local go modules</title><link>https://openQA-Bites.github.io/posts/2021/2021-08-13-local-go-modules/</link><pubDate>Fri, 13 Aug 2021 10:58:14 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-08-13-local-go-modules/</guid><description>&lt;p&gt;When dealing with go modules, sometimes it&amp;rsquo;s handy to test some changes from a local repository instead of using the upstream one.&lt;/p&gt;
&lt;p&gt;Now, go programs are typically relying only on the upstream packages. Take the module file of &lt;code&gt;openqa-mon&lt;/code&gt; as example:&lt;/p&gt;</description></item></channel></rss>