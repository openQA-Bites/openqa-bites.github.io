<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sysadmin on openQA bites</title><link>https://openQA-Bites.github.io/tags/sysadmin/</link><description>Recent content in Sysadmin on openQA bites</description><generator>Hugo</generator><language>en-us</language><managingEditor>felix.niederwanger@suse.de (phoenix)</managingEditor><webMaster>felix.niederwanger@suse.de (phoenix)</webMaster><lastBuildDate>Thu, 23 Nov 2023 16:09:52 +0100</lastBuildDate><atom:link href="https://openQA-Bites.github.io/tags/sysadmin/index.xml" rel="self" type="application/rss+xml"/><item><title>Upgrade a PostgreSQL container to a new major version</title><link>https://openQA-Bites.github.io/posts/2023/2023-11-23-upgrade_a_postgresql_container_to_a_new_major_version/</link><pubDate>Thu, 23 Nov 2023 16:09:52 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2023/2023-11-23-upgrade_a_postgresql_container_to_a_new_major_version/</guid><description>&lt;p&gt;&lt;a href="https://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt; is a capable and mature database, which comes in a major or minor version number (e.g. &lt;code&gt;16.0&lt;/code&gt;). Minor releases never change the internal storage, so the database always remains compatible with earlier and later minor releases. However major version releases do not have such a guarentee. We are running a single PostgreSQL database as a &lt;code&gt;podman&lt;/code&gt; container and I recently (today) had the glorious task of migrating this database to the next major version. In this blog post I describe how we did this migration.&lt;/p&gt;</description></item></channel></rss>