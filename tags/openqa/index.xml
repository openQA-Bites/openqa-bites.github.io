<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Openqa on openQA bites</title><link>https://openQA-Bites.github.io/tags/openqa/</link><description>Recent content in Openqa on openQA bites</description><generator>Hugo</generator><language>en-us</language><managingEditor>felix.niederwanger@suse.de (phoenix)</managingEditor><webMaster>felix.niederwanger@suse.de (phoenix)</webMaster><lastBuildDate>Mon, 13 Jan 2025 09:56:23 +0100</lastBuildDate><atom:link href="https://openQA-Bites.github.io/tags/openqa/index.xml" rel="self" type="application/rss+xml"/><item><title>openQA and PowerPC</title><link>https://openQA-Bites.github.io/posts/2024/2024-11-11-openqa_and_powerpc/</link><pubDate>Mon, 11 Nov 2024 11:14:48 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2024/2024-11-11-openqa_and_powerpc/</guid><description>&lt;p&gt;Due to recent changes in the worker configuration of the SUSE internal openQA instance, we needed to reconfigure some of the PowerPC jobs in openQA. This triggered a couple of questions regarding the availability of openQA worker, worker backends, their differences and their caveats. This blog post should act as a quickstart/overview guide for people getting into OpenQA testing on the PowerPC architecture.&lt;/p&gt;</description></item><item><title>openqa-mq shows you openQA's RabbitMQ events</title><link>https://openQA-Bites.github.io/posts/2024/2024-08-19-openqa-mq_shows_you_openqas_rabbitmq_events/</link><pubDate>Mon, 19 Aug 2024 07:55:19 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2024/2024-08-19-openqa-mq_shows_you_openqas_rabbitmq_events/</guid><description>&lt;p&gt;&lt;code&gt;openqa-mq&lt;/code&gt; is a small CLI tool that receives openQA related events from RabbitMQ. It is part of the &lt;code&gt;openqa-mon&lt;/code&gt; packages and will work for OSD and for OOO.&lt;/p&gt;</description></item><item><title>Paste text on VNC terminal</title><link>https://openQA-Bites.github.io/posts/2024/2024-03-21-paste_text_on_vnc_terminal/</link><pubDate>Thu, 21 Mar 2024 10:06:56 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2024/2024-03-21-paste_text_on_vnc_terminal/</guid><description>&lt;p&gt;A coworker recently faced the problem to copy&amp;amp;pasting a large amount of text into a VNC terminal for openQA. VNC doesn&amp;rsquo;t always allow copy&amp;amp;paste and when you have to manually type a longer string this is prone to typos and human error.&lt;/p&gt;</description></item><item><title>CLI: Check if there are jobs running</title><link>https://openQA-Bites.github.io/posts/2023/2023-05-05-cli_check_if_there_are_jobs_running/</link><pubDate>Fri, 05 May 2023 09:32:47 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2023/2023-05-05-cli_check_if_there_are_jobs_running/</guid><description>&lt;p&gt;I recently automated the installation of updates on my openQA development instance. The goal was to make the instance updates itself over night, but only if it is idle, i.e. there are no running jobs. Sometimes when I&amp;rsquo;m busy, the instance needs to work overnight and despite openQA being able to restart cancelled jobs from a reboot, I prefer to avoid situations where this might result in problems in times, where I really can&amp;rsquo;t have that.&lt;/p&gt;</description></item><item><title>openQA: Could not configure /dev/net/tun (tap3): Operation not permitted</title><link>https://openQA-Bites.github.io/posts/2023/2023-03-13-tap_not_permitted/</link><pubDate>Mon, 13 Mar 2023 14:58:18 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2023/2023-03-13-tap_not_permitted/</guid><description>&lt;p&gt;I recently encountered a new interesting openQA issue:&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;[2023-03-13T14:18:22.651705+01:00] [warn] [pid:18929] !!! : qemu-system-x86_64: -netdev tap,id=qanet0,ifname=tap3,script=no,downscript=no: could not configure /dev/net/tun (tap3): Operation not permitted
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This is an error that you likely are encountering on a older openQA instance, after you setup multimachine jobs but haven&amp;rsquo;t used them in a while. For me the solution was to grant the &lt;code&gt;CAP_NET_ADMIN&lt;/code&gt; capabilities to the qemu binary (again):&lt;/p&gt;</description></item><item><title>Safely clone a job on a production instance</title><link>https://openQA-Bites.github.io/posts/2023/2023-02-23-safely_clone_a_job_on_a_production_instance/</link><pubDate>Thu, 23 Feb 2023 14:42:22 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2023/2023-02-23-safely_clone_a_job_on_a_production_instance/</guid><description>&lt;p&gt;When developing new openQA tests you will have to run a lot of verification and debug test runs.
This is why I typically encourage people to do all openQA testing on their own instances, to prevent spamming of the production instances.&lt;/p&gt;</description></item><item><title>Reviewing openQA jobs with openqa-revtui</title><link>https://openQA-Bites.github.io/posts/2023/2023-01-27-reviewing_openqa_jobs_with_openqa-revtui/</link><pubDate>Fri, 27 Jan 2023 09:12:16 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2023/2023-01-27-reviewing_openqa_jobs_with_openqa-revtui/</guid><description>&lt;p&gt;The &lt;code&gt;openqa-revtui&lt;/code&gt; tool is a neat CLI utility for helping you review openQA jobs and job groups.
It is part of the &lt;code&gt;openqa-mon&lt;/code&gt; project, which has grown in the last years and now consists on more than the job monitoring tool itself.&lt;/p&gt;</description></item><item><title>openQA: emulated aarch64 worker</title><link>https://openQA-Bites.github.io/posts/2022/2022-10-04-emulated_aarch64_worker/</link><pubDate>Tue, 04 Oct 2022 08:29:20 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2022/2022-10-04-emulated_aarch64_worker/</guid><description>&lt;p&gt;Are you in dire need of an aarch64 worker on your own openQA instance, but no suitable hardware lying around?
If speed is not your main concern, then don&amp;rsquo;t worry - you can just enable a qemu-emulated aarch64 worker on your openQA instance (probably x86_64). In this post we&amp;rsquo;re gonna explore how to setup an emulated aarch64 qemu worker on your own openQA instance in less than 10 minutes.&lt;/p&gt;</description></item><item><title>openqa: asset download request but no domains passlisted</title><link>https://openQA-Bites.github.io/posts/2022-07-14-asset_download_request_but_no_domains_passlisted/</link><pubDate>Thu, 14 Jul 2022 13:23:55 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2022-07-14-asset_download_request_but_no_domains_passlisted/</guid><description>&lt;p&gt;&lt;strong&gt;Symptom&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When posting a job using , you see an error message of the following kind:&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;$ openqa-cli api -X POST isos ...
403 Forbidden
Asset download requested but no domains passlisted! Set download_domains.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;/p&gt;</description></item><item><title>openQA and dehydrated</title><link>https://openQA-Bites.github.io/posts/2022/2022-03-29-openqa-dehydrated/</link><pubDate>Tue, 29 Mar 2022 16:52:35 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2022/2022-03-29-openqa-dehydrated/</guid><description>&lt;p&gt;In this blog post I&amp;rsquo;m gonna show you, how you can enable https for your openQA instance using &lt;code&gt;dehydrated&lt;/code&gt; and the internal SUSE CA.
The same procedure should also work for Let&amp;rsquo;s Encrypt.&lt;/p&gt;</description></item><item><title>Fix the "Wrong version of perltidy" issue in tools/tidy</title><link>https://openQA-Bites.github.io/posts/2022/2022-03-04-perltidy/</link><pubDate>Fri, 04 Mar 2022 10:32:23 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2022/2022-03-04-perltidy/</guid><description>&lt;p&gt;A commen error when running &lt;code&gt;tools/tidy&lt;/code&gt; in the &lt;a href="https://github.com/os-autoinst/os-autoinst-distri-opensuse"&gt;openSUSE/SLES tests repository for openQA&lt;/a&gt; is the following error:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Wrong version of perltidy. Found '20211027', expected '20211029'.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This indicated a mismatch of the found vs. expected version of perltidy and the tidy script aborts to avoid inconsistent formatting between your PR and the CI pipeline. In Perl this is unfortunately necessary, as often a new version of &lt;code&gt;perltidy&lt;/code&gt; formats the code differently.&lt;/p&gt;</description></item><item><title>Extract SCHEDULE from an openQA job</title><link>https://openQA-Bites.github.io/posts/2021/2021-12-13-extract-schedule-script/</link><pubDate>Mon, 13 Dec 2021 13:46:51 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-12-13-extract-schedule-script/</guid><description>&lt;p&gt;Then using &lt;code&gt;openqa-clone-job&lt;/code&gt; (and derivates) one can use the &lt;code&gt;SCHEDULE&lt;/code&gt; variable to clone a test run with a custom set of test modules. This is particular useful, when developing a new test case and you need a verification run with e.g. an additional test module or to exclude some failing ones.
However it is sometimes cumbersome to type out a large list of tests into a custom &lt;code&gt;SCHEDULE&lt;/code&gt; variable, if the amount of test modules exceeds 5 or more tests (e.g. &lt;a href="https://openqa.opensuse.org/tests/2082504"&gt;extra_tests_textmode&lt;/a&gt; - good luck!).&lt;/p&gt;</description></item><item><title>Clean empty job groups in openQA</title><link>https://openQA-Bites.github.io/posts/2021/2021-11-17-clean-empty-job-groups/</link><pubDate>Wed, 17 Nov 2021 09:51:26 +0100</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-11-17-clean-empty-job-groups/</guid><description>&lt;p&gt;In this blog post I present you a small script, which can help you to remove empty job groups from your own openQA instance. This is helpful if you have a development instance with a lot of job groups, that you never use. This script can help you to tidy the list of dangling job groups.&lt;/p&gt;</description></item><item><title>Playing with the openqa API</title><link>https://openQA-Bites.github.io/posts/2021/2021-09-23-api-playing/</link><pubDate>Fri, 24 Sep 2021 08:00:00 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-09-23-api-playing/</guid><description>&lt;p&gt;Today we are going to play a bit around with the amazing API that every openQA instance provides.
The aim of this tutorial is to show how the API can be accessed using a simple language like python.
More advanced topics like job posting, deletion and other methods that require authentication are possible but not covered extensively in this post.
The reference for this post will be &lt;a href="https://openqa.opensuse.org"&gt;openqa.opensuse.org&lt;/a&gt;, but everything works pretty much with every openQA instance.&lt;/p&gt;</description></item><item><title>Hidden gem - Show failures only in external results</title><link>https://openQA-Bites.github.io/posts/2021/2021-05-12-failing-external-results/</link><pubDate>Wed, 12 May 2021 09:25:29 +0200</pubDate><author>felix.niederwanger@suse.de (phoenix)</author><guid>https://openQA-Bites.github.io/posts/2021/2021-05-12-failing-external-results/</guid><description>&lt;p&gt;I just recently discovered one of the hidden gems in the openQA WebUI: Show only failing tests in external results.&lt;/p&gt;
&lt;p&gt;&lt;a href="Screenshot-OnlyFailing.png"&gt;&lt;img src="Screenshot-OnlyFailing_Cropped.png" alt="Screenshot of the openQA WebUI, showing only one failed job in the list of external results"&gt;&lt;/a&gt;&lt;/p&gt;</description></item></channel></rss>